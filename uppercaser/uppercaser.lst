     1                                  section .bss
     2 00000000 <res 00000400>          	Buff resb 1024			; Create a buffer of length 1024 bytes
     3                                  
     4                                  section .data
     5                                  	SYS_READ equ 0
     6                                  	STDIN equ 0
     7                                  	STDOUT equ 1
     8                                  	SYS_EXIT equ 60
     9                                  	SYS_WRITE equ 1
    10                                  	BUF_LEN equ 1024
    11                                  	
    12                                  section .text
    13                                  	global _start
    14                                  
    15                                  _start:
    16 00000000 90                      	nop
    17                                  
    18 00000001 B800000000              Read:	mov rax, SYS_READ		; READ syscall
    19 00000006 BF00000000              	mov rdi, STDIN			; Reading from STDIN
    20 0000000B 48BE-                   	mov rsi, Buff			; Put the buffer into rsi
    20 0000000D [0000000000000000] 
    21 00000015 BA00040000              	mov rdx, BUF_LEN		; Take a single character from stdin and put it in the buffer
    22 0000001A 0F05                    	syscall
    23                                  
    24 0000001C 4883F800                	cmp rax, 0			; See if the return value is 0, and if so exit
    25 00000020 7445                    	je Exit
    26                                  
    27 00000022 48BD-                   	mov rbp, Buff			; mov the address of Buff to rbp
    27 00000024 [0000000000000000] 
    28 0000002C 48FFCD                  	dec rbp				; decrement rbp so we can use the count as the offset
    29 0000002F 4889C1                  	mov rcx, rax			; mov char count read to rcx
    30                                  
    31 00000032 807C0D0061              Loop:	cmp byte [rbp+rcx], 61h		; Test input against lowercase 'a'
    32 00000037 720C                    	jb Dec				; If below 'a' in the ASCII table, it is not a lowercase character
    33 00000039 807C0D007A              	cmp byte [rbp+rcx], 7ah		; Test input against lowercase 'z'
    34 0000003E 7705                    	ja Dec				; If above 'a' in the ASCII table, it is not a lowercase character
    35                                  
    36 00000040 806C0D0020              	sub byte [rbp+rcx], 20h		; If the character is lowercase, uppwercase it by subtracting 32
    37                                  
    38 00000045 48FFC9                  Dec:	dec rcx				; Decrement rcx
    39 00000048 75E8                    	jnz Loop			; If not zero go to loop
    40                                  
    41 0000004A B801000000              Write:	mov rax, SYS_WRITE		; Get ready to call write
    42 0000004F BF01000000              	mov rdi, STDOUT			; Write to stdout
    43 00000054 48BE-                   	mov rsi, Buff			; Write the contents of the buffer
    43 00000056 [0000000000000000] 
    44 0000005E BA00040000              	mov rdx, BUF_LEN			; Write the buffer length
    45 00000063 0F05                    	syscall
    46 00000065 EB9A                    	jmp Read			; Go back to Read
    47                                  
    48 00000067 B83C000000              Exit:	mov rax, SYS_EXIT
    49 0000006C BF00000000              	mov rdi, 0
    50 00000071 0F05                    	syscall
